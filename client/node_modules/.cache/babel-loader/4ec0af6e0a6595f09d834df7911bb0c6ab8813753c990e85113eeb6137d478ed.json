{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// Ceci est un hook personnalisé\nconst usePokemons = () => {\n  _s();\n  const history = useHistory();\n\n  // ce hook personnalisé comporte d'autres hooks (useState et useEffect ici)\n  // les crochets servent pour le destructuring d'es6\n  const [pokemons, setPokemons] = useState([]);\n  // Au lieu de :\n  // const pokemonsStateVariable = useState<Pokemon[]>([]);\n  // const pokemons = pokemonsStateVariable[0];\n  // const setPokemons = pokemonsStateVariable[1];\n  // Pour récupérer seulement les pokémons, on peut faire :\n  // const [pokemons] = useState<Pokemon[]>(POKEMONS);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3002/api/pokemons?limit=20\", {\n      headers: {\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE3MDg2MzM0ODYsImV4cCI6MTcwODcxOTg4Nn0.oAeq_bKVxPXpNhu6YsVXnfhT9-XMKtiJrZbxx5QZSu8\"\n      }\n    }).then(response => response.json()).then(response => {\n      response = response.data.map(pokemon => {\n        return {\n          ...pokemon,\n          ...{\n            created: new Date(pokemon.created)\n          }\n        };\n      });\n      setPokemons(response);\n    }).catch(e => console.log(\"lol\", e));\n  }, []);\n  // le tableau vide en argument permet d'éviter de déclencher\n  // le hook d'effet à chaque modification du composant\n  // il se déclenche que lors du premier rendu\n  // Si on ajoute des dépendances au tableau, le hook se déclenchera aussi\n  // lors de des modifications de ses dépendances\n  // Si, on ne met rien, le hook s'active à chaque modification du composant\n\n  return pokemons;\n};\n_s(usePokemons, \"kLxkFNWFfDsqfdOVowc2uS5bBIE=\", false, function () {\n  return [useHistory];\n});\nexport default usePokemons;","map":{"version":3,"names":["useState","useEffect","useHistory","usePokemons","_s","history","pokemons","setPokemons","fetch","headers","Authorization","then","response","json","data","map","pokemon","created","Date","catch","e","console","log"],"sources":["C:/Users/yuedo/OneDrive/Bureau/JS/React/pokedex/client/src/hooks/pokemon.hook.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ceci est un hook personnalisé\r\nconst usePokemons = () => {\r\n  const history = useHistory();\r\n\r\n  // ce hook personnalisé comporte d'autres hooks (useState et useEffect ici)\r\n  // les crochets servent pour le destructuring d'es6\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  // Au lieu de :\r\n  // const pokemonsStateVariable = useState<Pokemon[]>([]);\r\n  // const pokemons = pokemonsStateVariable[0];\r\n  // const setPokemons = pokemonsStateVariable[1];\r\n  // Pour récupérer seulement les pokémons, on peut faire :\r\n  // const [pokemons] = useState<Pokemon[]>(POKEMONS);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3002/api/pokemons?limit=20\", {\r\n      headers: {\r\n        Authorization:\r\n          \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE3MDg2MzM0ODYsImV4cCI6MTcwODcxOTg4Nn0.oAeq_bKVxPXpNhu6YsVXnfhT9-XMKtiJrZbxx5QZSu8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        response = response.data.map((pokemon: Pokemon) => {\r\n          return { ...pokemon, ...{ created: new Date(pokemon.created) } };\r\n        });\r\n        setPokemons(response);\r\n      })\r\n      .catch((e) => console.log(\"lol\", e));\r\n  }, []);\r\n  // le tableau vide en argument permet d'éviter de déclencher\r\n  // le hook d'effet à chaque modification du composant\r\n  // il se déclenche que lors du premier rendu\r\n  // Si on ajoute des dépendances au tableau, le hook se déclenchera aussi\r\n  // lors de des modifications de ses dépendances\r\n  // Si, on ne met rien, le hook s'active à chaque modification du composant\r\n\r\n  return pokemons;\r\n};\r\n\r\nexport default usePokemons;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;EAE5B;EACA;EACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAY,EAAE,CAAC;EACvD;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,6CAA6C,EAAE;MACnDC,OAAO,EAAE;QACPC,aAAa,EACX;MACJ;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAK;MAClBA,QAAQ,GAAGA,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,OAAgB,IAAK;QACjD,OAAO;UAAE,GAAGA,OAAO;UAAE,GAAG;YAAEC,OAAO,EAAE,IAAIC,IAAI,CAACF,OAAO,CAACC,OAAO;UAAE;QAAE,CAAC;MAClE,CAAC,CAAC;MACFV,WAAW,CAACK,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDO,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOd,QAAQ;AACjB,CAAC;AAACF,EAAA,CArCID,WAAW;EAAA,QACCD,UAAU;AAAA;AAsC5B,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}