{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// Ceci est un hook personnalisé\nconst usePokemons = () => {\n  _s();\n  // ce hook personnalisé comporte d'autres hooks (useState et useEffect ici)\n  // les crochets servent pour le destructuring d'es6\n  const [pokemons, setPokemons] = useState([]);\n  // Au lieu de :\n  // const pokemonsStateVariable = useState<Pokemon[]>([]);\n  // const pokemons = pokemonsStateVariable[0];\n  // const setPokemons = pokemonsStateVariable[1];\n  // Pour récupérer seulement les pokémons, on peut faire :\n  // const [pokemons] = useState<Pokemon[]>(POKEMONS);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/pokemons\", {\n      headers: {\n        method: \"GET\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE3MDg2MzM0ODYsImV4cCI6MTcwODcxOTg4Nn0.oAeq_bKVxPXpNhu6YsVXnfhT9-XMKtiJrZbxx5QZSu8\"\n      }\n    }).then(response => response.json()).then(response => {\n      console.log(response.data);\n      response.data.map(pokemon => {\n        console.log(pokemon.cp);\n        return console.log(pokemon);\n      });\n      console.log(response.data);\n      setPokemons(response.data);\n    }).catch(e => console.log(e));\n  }, []);\n  // le tableau vide en argument permet d'éviter de déclencher\n  // le hook d'effet à chaque modification du composant\n  // il se déclenche que lors du premier rendu\n  // Si on ajoute des dépendances au tableau, le hook se déclenchera aussi\n  // lors de des modifications de ses dépendances\n  // Si, on ne met rien, le hook s'active à chaque modification du composant\n\n  return pokemons;\n};\n_s(usePokemons, \"HTV26hiVYObM9ZdttYFfm0Hoy8g=\");\nexport default usePokemons;","map":{"version":3,"names":["useState","useEffect","usePokemons","_s","pokemons","setPokemons","fetch","headers","method","Authorization","then","response","json","console","log","data","map","pokemon","cp","catch","e"],"sources":["C:/Users/yuedo/OneDrive/Bureau/JS/React/pokedex/client/src/hooks/pokemon.hook.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport { create } from \"domain\";\r\n\r\ntype Created = {\r\n  created: Date;\r\n};\r\n\r\n// Ceci est un hook personnalisé\r\nconst usePokemons = () => {\r\n  // ce hook personnalisé comporte d'autres hooks (useState et useEffect ici)\r\n  // les crochets servent pour le destructuring d'es6\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  // Au lieu de :\r\n  // const pokemonsStateVariable = useState<Pokemon[]>([]);\r\n  // const pokemons = pokemonsStateVariable[0];\r\n  // const setPokemons = pokemonsStateVariable[1];\r\n  // Pour récupérer seulement les pokémons, on peut faire :\r\n  // const [pokemons] = useState<Pokemon[]>(POKEMONS);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/api/pokemons\", {\r\n      headers: {\r\n        method: \"GET\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization:\r\n          \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE3MDg2MzM0ODYsImV4cCI6MTcwODcxOTg4Nn0.oAeq_bKVxPXpNhu6YsVXnfhT9-XMKtiJrZbxx5QZSu8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        response.data.map((pokemon: Pokemon) => {\r\n          console.log(pokemon.cp);\r\n          return console.log(pokemon);\r\n        });\r\n        console.log(response.data);\r\n        setPokemons(response.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n  // le tableau vide en argument permet d'éviter de déclencher\r\n  // le hook d'effet à chaque modification du composant\r\n  // il se déclenche que lors du premier rendu\r\n  // Si on ajoute des dépendances au tableau, le hook se déclenchera aussi\r\n  // lors de des modifications de ses dépendances\r\n  // Si, on ne met rien, le hook s'active à chaque modification du composant\r\n\r\n  return pokemons;\r\n};\r\n\r\nexport default usePokemons;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAQ3C;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAY,EAAE,CAAC;EACvD;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,OAAO,EAAE;QACPC,MAAM,EAAE,KAAK;QACb,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EACX;MACJ;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BJ,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAEC,OAAgB,IAAK;QACtCJ,OAAO,CAACC,GAAG,CAACG,OAAO,CAACC,EAAE,CAAC;QACvB,OAAOL,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;MAC7B,CAAC,CAAC;MACFJ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BV,WAAW,CAACM,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDI,KAAK,CAAEC,CAAC,IAAKP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOhB,QAAQ;AACjB,CAAC;AAACD,EAAA,CAxCID,WAAW;AA0CjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}