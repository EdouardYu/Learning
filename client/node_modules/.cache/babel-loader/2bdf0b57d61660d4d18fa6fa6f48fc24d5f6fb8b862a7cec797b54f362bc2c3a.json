{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuedo\\\\OneDrive\\\\Bureau\\\\JS\\\\React\\\\pokedex\\\\client\\\\src\\\\components\\\\pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./pokemon-card.css\";\nimport formatDate from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = _ref => {\n  _s();\n  let {\n    pokemon,\n    borderColor = \"#009688\"\n  } = _ref;\n  const [color, setColor] = useState();\n\n  // permet de récupérer l'historique du navigateur\n  const history = useHistory();\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\");\n  };\n\n  // trick permettant de simuler une navigation aussi à la place de Link\n  const goToPokemon = name => {\n    history.push(`/pokemons/${name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onClick: () => goToPokemon(pokemon.name),\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonCard, \"nmprnW86+m0r42mJ5w56oVai7yE=\", false, function () {\n  return [useHistory];\n});\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["useState","formatDate","formatType","useHistory","jsxDEV","_jsxDEV","PokemonCard","_ref","_s","pokemon","borderColor","color","setColor","history","showBorder","hideBorder","goToPokemon","name","push","className","onClick","onMouseEnter","onMouseLeave","children","style","src","picture","alt","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","type","_c","$RefreshReg$"],"sources":["C:/Users/yuedo/OneDrive/Bureau/JS/React/pokedex/client/src/components/pokemon-card.tsx"],"sourcesContent":["import { FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport \"./pokemon-card.css\";\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({\r\n  pokemon,\r\n  borderColor = \"#009688\",\r\n}) => {\r\n  const [color, setColor] = useState<string>();\r\n\r\n  // permet de récupérer l'historique du navigateur\r\n  const history = useHistory();\r\n\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n\r\n  const hideBorder = () => {\r\n    setColor(\"#f5f5f5\");\r\n  };\r\n\r\n  // trick permettant de simuler une navigation aussi à la place de Link\r\n  const goToPokemon = (name: String) => {\r\n    history.push(`/pokemons/${name}`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"col s6 m4\"\r\n      onClick={() => goToPokemon(pokemon.name)}\r\n      onMouseEnter={showBorder}\r\n      onMouseLeave={hideBorder}\r\n    >\r\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p>\r\n              <small>{formatDate(pokemon.created)}</small>\r\n            </p>\r\n            {pokemon.types.map((type) => (\r\n              <span key={type} className={formatType(type)}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}